  1:	proc  0 (:init:) fmep_mc.pml:30 (state 1)	[i = 0]
  2:	proc  0 (:init:) fmep_mc.pml:30 (state 7)	[((i<=1))]
  3:	proc  0 (:init:) fmep_mc.pml:31 (state 3)	[flags[i] = 0]
  4:	proc  0 (:init:) fmep_mc.pml:30 (state 4)	[i = (i+1)]
  5:	proc  0 (:init:) fmep_mc.pml:30 (state 7)	[((i<=1))]
  6:	proc  0 (:init:) fmep_mc.pml:31 (state 3)	[flags[i] = 0]
  7:	proc  0 (:init:) fmep_mc.pml:30 (state 4)	[i = (i+1)]
  8:	proc  0 (:init:) fmep_mc.pml:30 (state 7)	[else]
  9:	proc  0 (:init:) fmep_mc.pml:34 (state 12)	[(run mep(1))]
 10:	proc  0 (:init:) fmep_mc.pml:35 (state 11)	[(run mep(0))]
 11:	proc  2 (mep) fmep_mc.pml:8 (state 21)	[flags[n] = 1]
 12:	proc  2 (mep) fmep_mc.pml:10 (state 12)	[((turn==n))]
0 went in 
 13:	proc  2 (mep) fmep_mc.pml:18 (state 15)	[printf('%d went in \n',n)]
 14:	proc  2 (mep) fmep_mc.pml:20 (state 16)	[cs = (cs+1)]
 15:	proc  2 (mep) fmep_mc.pml:21 (state 17)	[assert((cs==1))]
 16:	proc  2 (mep) fmep_mc.pml:22 (state 18)	[cs = (cs-1)]
 17:	proc  2 (mep) fmep_mc.pml:23 (state 19)	[flags[n] = 0]
 18:	proc  1 (mep) fmep_mc.pml:8 (state 21)	[flags[n] = 1]
0 went out 
 19:	proc  2 (mep) fmep_mc.pml:24 (state 20)	[printf('%d went out \n',n)]
 20:	proc  2 (mep) fmep_mc.pml:8 (state 21)	[flags[n] = 1]
 21:	proc  2 (mep) fmep_mc.pml:10 (state 12)	[((turn==n))]
0 went in 
 22:	proc  2 (mep) fmep_mc.pml:18 (state 15)	[printf('%d went in \n',n)]
 23:	proc  2 (mep) fmep_mc.pml:20 (state 16)	[cs = (cs+1)]
 24:	proc  2 (mep) fmep_mc.pml:21 (state 17)	[assert((cs==1))]
 25:	proc  2 (mep) fmep_mc.pml:22 (state 18)	[cs = (cs-1)]
 26:	proc  1 (mep) fmep_mc.pml:10 (state 12)	[else]
 27:	proc  2 (mep) fmep_mc.pml:23 (state 19)	[flags[n] = 0]
0 went out 
 28:	proc  2 (mep) fmep_mc.pml:24 (state 20)	[printf('%d went out \n',n)]
 29:	proc  1 (mep) fmep_mc.pml:13 (state 8)	[(!(flags[(1-n)]))]
 30:	proc  2 (mep) fmep_mc.pml:8 (state 21)	[flags[n] = 1]
 31:	proc  2 (mep) fmep_mc.pml:10 (state 12)	[((turn==n))]
0 went in 
 32:	proc  2 (mep) fmep_mc.pml:18 (state 15)	[printf('%d went in \n',n)]
 33:	proc  2 (mep) fmep_mc.pml:20 (state 16)	[cs = (cs+1)]
 34:	proc  2 (mep) fmep_mc.pml:21 (state 17)	[assert((cs==1))]
 35:	proc  2 (mep) fmep_mc.pml:22 (state 18)	[cs = (cs-1)]
 36:	proc  2 (mep) fmep_mc.pml:23 (state 19)	[flags[n] = 0]
 37:	proc  1 (mep) fmep_mc.pml:16 (state 11)	[turn = n]
0 went out 
 38:	proc  2 (mep) fmep_mc.pml:24 (state 20)	[printf('%d went out \n',n)]
 39:	proc  2 (mep) fmep_mc.pml:8 (state 21)	[flags[n] = 1]
 40:	proc  2 (mep) fmep_mc.pml:10 (state 12)	[else]
 41:	proc  1 (mep) fmep_mc.pml:10 (state 12)	[((turn==n))]
1 went in 
 42:	proc  1 (mep) fmep_mc.pml:18 (state 15)	[printf('%d went in \n',n)]
 43:	proc  1 (mep) fmep_mc.pml:20 (state 16)	[cs = (cs+1)]
 44:	proc  1 (mep) fmep_mc.pml:21 (state 17)	[assert((cs==1))]
 45:	proc  1 (mep) fmep_mc.pml:22 (state 18)	[cs = (cs-1)]
 46:	proc  1 (mep) fmep_mc.pml:23 (state 19)	[flags[n] = 0]
1 went out 
 47:	proc  1 (mep) fmep_mc.pml:24 (state 20)	[printf('%d went out \n',n)]
 48:	proc  2 (mep) fmep_mc.pml:13 (state 8)	[(!(flags[(1-n)]))]
 49:	proc  1 (mep) fmep_mc.pml:8 (state 21)	[flags[n] = 1]
 50:	proc  1 (mep) fmep_mc.pml:10 (state 12)	[((turn==n))]
1 went in 
 51:	proc  1 (mep) fmep_mc.pml:18 (state 15)	[printf('%d went in \n',n)]
 52:	proc  2 (mep) fmep_mc.pml:16 (state 11)	[turn = n]
 53:	proc  2 (mep) fmep_mc.pml:10 (state 12)	[((turn==n))]
0 went in 
 54:	proc  2 (mep) fmep_mc.pml:18 (state 15)	[printf('%d went in \n',n)]
 55:	proc  2 (mep) fmep_mc.pml:20 (state 16)	[cs = (cs+1)]
 56:	proc  2 (mep) fmep_mc.pml:21 (state 17)	[assert((cs==1))]
 57:	proc  2 (mep) fmep_mc.pml:22 (state 18)	[cs = (cs-1)]
 58:	proc  2 (mep) fmep_mc.pml:23 (state 19)	[flags[n] = 0]
0 went out 
 59:	proc  2 (mep) fmep_mc.pml:24 (state 20)	[printf('%d went out \n',n)]
 60:	proc  1 (mep) fmep_mc.pml:20 (state 16)	[cs = (cs+1)]
 61:	proc  2 (mep) fmep_mc.pml:8 (state 21)	[flags[n] = 1]
 62:	proc  2 (mep) fmep_mc.pml:10 (state 12)	[((turn==n))]
0 went in 
 63:	proc  2 (mep) fmep_mc.pml:18 (state 15)	[printf('%d went in \n',n)]
 64:	proc  2 (mep) fmep_mc.pml:20 (state 16)	[cs = (cs+1)]
pan:1: assertion violated (cs==1) (at depth 65)
spin: trail ends after 65 steps
#processes 3:
 65:	proc 0 (:init:)  fmep_mc.pml:38 (state 13)
		-end-
 65:	proc 1 (mep)  fmep_mc.pml:21 (state 17) (invalid end state)
		assert((cs==1))
 65:	proc 2 (mep)  fmep_mc.pml:21 (state 17) (invalid end state)
		assert((cs==1))
global vars:
	byte   turn:	0
	bit    flags[0]:	1
	bit    flags[1]:	1
	byte   cs:	2
local vars proc 0 (:init:):
	byte   i:	2
local vars proc 1 (mep):
	int    n:	1
local vars proc 2 (mep):
	int    n:	0
